#include<iostream>
using namespace std;

class node{
    public:
    int data;
    node* prev;
    node* next;

    //constructor
    node(int d)
    {
        this->data=d;
        this->prev=NULL;
        this->next=NULL;
    }
};

//traversing a linked list
void print(node* head)
{
    node* ptr=head;
    while(ptr!=NULL)
    {
        
        cout<<ptr->data<<" ";
        ptr=ptr->next;
    }
}

//length of linked list:
void getlength(node* &head)
{
    int count=1;
    node* ptr=head;
    while(ptr->next!=NULL)
    {
        count++;
        ptr=ptr->next;
    }
    cout<<"\n"<<"length of the linkedlist till now is: "<<count;
}
    
void insertathead(node* &head,int d)
{
    
    node* temp=new node(d);
    temp->next=head;
    head->prev=temp;
    temp->prev=NULL;
    head=temp;

}
void insertattail(node* &head,int d)
{
    node* temp=new node(d);
    node* itr=head;
    while(itr->next!=NULL)
    {
        itr=itr->next;
    }
    temp->next=NULL;
    temp->prev=itr;
    itr->next=temp;
}

void insertatposition(node* &head,int position,int d)
{
    if(position==1)
    insertathead(head,d);


        node* temp=new node(d);
        node* itr=head;
        int index=1;
        while(index < position-1)
        {
            itr=itr->next;
            index++;
        }
        temp->next=itr->next;
        itr->next->prev=temp;
        itr->next=temp;
        temp->prev=itr;    
}



// function to  reverse the linkedlist


node *reverseLinkedList(node *&head) 
{
    if(head==NULL || head->next==NULL)
    {
        return head;
    }
    node* forward=NULL;
    node* prev=NULL;
    node* curr=head;
    
    while(curr!=NULL)
    {
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }
    return prev;
}



int main()
{
    node*head=new node(10);
    
    
    /* insertathead(head,11);
    insertathead(head,785);
    insertathead(head,57);
    insertathead(head,87);
    insertathead(head,40);
    print(head);
    getlength(head);

    insertattail(head,678);
    insertatposition(head,6,8983);
    cout<<endl;
    print(head); */

    int per;
    do
    {
        cout<<"\n1)insertatfirst 2)insertattail 3)print 4)getlength 5)reverse_list"<<endl;
        int op;
        cin>>op;
        switch(op)
        {
            case 1:
            cout<<"enter the data dude: "<<endl;
            int data;
            cin>>data;
            insertathead(head,data);
            break;

            case 2:
            cout<<"enter the data dude: "<<endl;
            int dat;
            cin>>data;
            insertattail(head,data);
            break;

            case 3:
            cout<<"your linked list is as followed bro: "<<endl;
            print(head);
            break;

            case 4:
            getlength(head);
            break;

            case 5:
            head=reverseLinkedList(head);
            print(head);
            break;

            default:
            cout<<"not a valid input babe:) ";
            break;
       }
       cout<<"\n"<<"wanna try more functions? press 1 for yes or any key for a no:)"<<endl;
       cin>>per;
        
    } while (per==1);
    




    
}    
